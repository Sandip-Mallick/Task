import {
  require_react
} from "./chunk-OU5AQDZK.js";
import {
  __commonJS
} from "./chunk-EWTE5DHJ.js";

// node_modules/react-read-more-read-less/build/index.js
var require_build = __commonJS({
  "node_modules/react-read-more-read-less/build/index.js"(exports, module) {
    module.exports = /******/
    function(modules) {
      var installedModules = {};
      function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) {
          return installedModules[moduleId].exports;
        }
        var module2 = installedModules[moduleId] = {
          /******/
          i: moduleId,
          /******/
          l: false,
          /******/
          exports: {}
          /******/
        };
        modules[moduleId].call(module2.exports, module2, module2.exports, __webpack_require__);
        module2.l = true;
        return module2.exports;
      }
      __webpack_require__.m = modules;
      __webpack_require__.c = installedModules;
      __webpack_require__.i = function(value) {
        return value;
      };
      __webpack_require__.d = function(exports2, name, getter) {
        if (!__webpack_require__.o(exports2, name)) {
          Object.defineProperty(exports2, name, {
            /******/
            configurable: false,
            /******/
            enumerable: true,
            /******/
            get: getter
            /******/
          });
        }
      };
      __webpack_require__.n = function(module2) {
        var getter = module2 && module2.__esModule ? (
          /******/
          function getDefault() {
            return module2["default"];
          }
        ) : (
          /******/
          function getModuleExports() {
            return module2;
          }
        );
        __webpack_require__.d(getter, "a", getter);
        return getter;
      };
      __webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      __webpack_require__.p = "";
      return __webpack_require__(__webpack_require__.s = 5);
    }([
      /* 0 */
      /***/
      function(module2, exports2) {
        var process = module2.exports = {};
        var cachedSetTimeout;
        var cachedClearTimeout;
        function defaultSetTimout() {
          throw new Error("setTimeout has not been defined");
        }
        function defaultClearTimeout() {
          throw new Error("clearTimeout has not been defined");
        }
        (function() {
          try {
            if (typeof setTimeout === "function") {
              cachedSetTimeout = setTimeout;
            } else {
              cachedSetTimeout = defaultSetTimout;
            }
          } catch (e) {
            cachedSetTimeout = defaultSetTimout;
          }
          try {
            if (typeof clearTimeout === "function") {
              cachedClearTimeout = clearTimeout;
            } else {
              cachedClearTimeout = defaultClearTimeout;
            }
          } catch (e) {
            cachedClearTimeout = defaultClearTimeout;
          }
        })();
        function runTimeout(fun) {
          if (cachedSetTimeout === setTimeout) {
            return setTimeout(fun, 0);
          }
          if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
            cachedSetTimeout = setTimeout;
            return setTimeout(fun, 0);
          }
          try {
            return cachedSetTimeout(fun, 0);
          } catch (e) {
            try {
              return cachedSetTimeout.call(null, fun, 0);
            } catch (e2) {
              return cachedSetTimeout.call(this, fun, 0);
            }
          }
        }
        function runClearTimeout(marker) {
          if (cachedClearTimeout === clearTimeout) {
            return clearTimeout(marker);
          }
          if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
            cachedClearTimeout = clearTimeout;
            return clearTimeout(marker);
          }
          try {
            return cachedClearTimeout(marker);
          } catch (e) {
            try {
              return cachedClearTimeout.call(null, marker);
            } catch (e2) {
              return cachedClearTimeout.call(this, marker);
            }
          }
        }
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;
        function cleanUpNextTick() {
          if (!draining || !currentQueue) {
            return;
          }
          draining = false;
          if (currentQueue.length) {
            queue = currentQueue.concat(queue);
          } else {
            queueIndex = -1;
          }
          if (queue.length) {
            drainQueue();
          }
        }
        function drainQueue() {
          if (draining) {
            return;
          }
          var timeout = runTimeout(cleanUpNextTick);
          draining = true;
          var len = queue.length;
          while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
              if (currentQueue) {
                currentQueue[queueIndex].run();
              }
            }
            queueIndex = -1;
            len = queue.length;
          }
          currentQueue = null;
          draining = false;
          runClearTimeout(timeout);
        }
        process.nextTick = function(fun) {
          var args = new Array(arguments.length - 1);
          if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
              args[i - 1] = arguments[i];
            }
          }
          queue.push(new Item(fun, args));
          if (queue.length === 1 && !draining) {
            runTimeout(drainQueue);
          }
        };
        function Item(fun, array) {
          this.fun = fun;
          this.array = array;
        }
        Item.prototype.run = function() {
          this.fun.apply(null, this.array);
        };
        process.title = "browser";
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = "";
        process.versions = {};
        function noop() {
        }
        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;
        process.listeners = function(name) {
          return [];
        };
        process.binding = function(name) {
          throw new Error("process.binding is not supported");
        };
        process.cwd = function() {
          return "/";
        };
        process.chdir = function(dir) {
          throw new Error("process.chdir is not supported");
        };
        process.umask = function() {
          return 0;
        };
      },
      /* 1 */
      /***/
      function(module2, exports2, __webpack_require__) {
        "use strict";
        var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
        module2.exports = ReactPropTypesSecret;
      },
      /* 2 */
      /***/
      function(module2, exports2, __webpack_require__) {
        "use strict";
        (function(process) {
          if (process.env.NODE_ENV === "production") {
            module2.exports = __webpack_require__(11);
          } else {
            module2.exports = __webpack_require__(10);
          }
        }).call(exports2, __webpack_require__(0));
      },
      /* 3 */
      /***/
      function(module2, exports2, __webpack_require__) {
        (function(process) {
          if (process.env.NODE_ENV !== "production") {
            var ReactIs = __webpack_require__(2);
            var throwOnDirectAccess = true;
            module2.exports = __webpack_require__(9)(ReactIs.isElement, throwOnDirectAccess);
          } else {
            module2.exports = __webpack_require__(8)();
          }
        }).call(exports2, __webpack_require__(0));
      },
      /* 4 */
      /***/
      function(module2, exports2) {
        module2.exports = require_react();
      },
      /* 5 */
      /***/
      function(module2, exports2, __webpack_require__) {
        "use strict";
        Object.defineProperty(exports2, "__esModule", {
          value: true
        });
        var _createClass = /* @__PURE__ */ function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();
        var _react = __webpack_require__(4);
        var _react2 = _interopRequireDefault(_react);
        var _propTypes = __webpack_require__(3);
        var _propTypes2 = _interopRequireDefault(_propTypes);
        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }
        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }
          subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        var ReactReadMoreReadLess = function(_React$Component) {
          _inherits(ReactReadMoreReadLess2, _React$Component);
          function ReactReadMoreReadLess2(props) {
            _classCallCheck(this, ReactReadMoreReadLess2);
            var _this = _possibleConstructorReturn(this, (ReactReadMoreReadLess2.__proto__ || Object.getPrototypeOf(ReactReadMoreReadLess2)).call(this, props));
            _this.state = {
              showMore: false
            };
            return _this;
          }
          _createClass(ReactReadMoreReadLess2, [{
            key: "render",
            value: function render() {
              var props = this.props;
              var children = props.children, ellipsis = props.ellipsis, readMoreText = props.readMoreText, readLessText = props.readLessText, readMoreClassName = props.readMoreClassName, readLessClassName = props.readLessClassName, readMoreStyle = props.readMoreStyle, readLessStyle = props.readLessStyle, charLimit = props.charLimit;
              var showMore = this.state.showMore;
              var shortText = children.substr(0, charLimit).replace(/[\s\n]+$/, "").replace(/[.,\/#!$%\^&\*;:{}=\-_`~()]+$/, "") + (charLimit >= children.length ? "" : ellipsis);
              var that = this;
              var ReadMore = function ReadMore2() {
                return charLimit >= children.length || !readMoreText ? null : _react2.default.createElement(
                  "span",
                  {
                    className: readMoreClassName,
                    role: "presentation",
                    style: readMoreStyle,
                    onClick: function onClick() {
                      that.setState({ showMore: true });
                    }
                  },
                  readMoreText
                );
              };
              var ReadLess = function ReadLess2() {
                return charLimit >= children.length || !readLessText ? null : _react2.default.createElement(
                  "span",
                  {
                    className: readLessClassName,
                    role: "presentation",
                    style: readLessStyle,
                    onClick: function onClick() {
                      that.setState({ showMore: false });
                    }
                  },
                  readLessText
                );
              };
              return _react2.default.createElement(
                _react2.default.Fragment,
                null,
                showMore ? children : shortText,
                " ",
                showMore ? _react2.default.createElement(ReadLess, null) : _react2.default.createElement(ReadMore, null)
              );
            }
          }]);
          return ReactReadMoreReadLess2;
        }(_react2.default.Component);
        ReactReadMoreReadLess.propTypes = {
          charLimit: _propTypes2.default.number,
          ellipsis: _propTypes2.default.string,
          readMoreText: _propTypes2.default.string,
          readLessText: _propTypes2.default.string,
          readMoreClassName: _propTypes2.default.string,
          readLessClassName: _propTypes2.default.string,
          readMoreStyle: _propTypes2.default.object,
          readLessStyle: _propTypes2.default.object,
          children: _propTypes2.default.string.isRequired
        };
        ReactReadMoreReadLess.defaultProps = {
          charLimit: 150,
          ellipsis: "…",
          readMoreText: "Read more",
          readLessText: "Read less",
          readMoreClassName: "react-read-more-read-less react-read-more-read-less-more",
          readLessClassName: "react-read-more-read-less react-read-more-read-less-less",
          readMoreStyle: { whiteSpace: "nowrap", cursor: "pointer" },
          readLessStyle: { whiteSpace: "nowrap", cursor: "pointer" }
        };
        exports2.default = ReactReadMoreReadLess;
      },
      /* 6 */
      /***/
      function(module2, exports2, __webpack_require__) {
        "use strict";
        var getOwnPropertySymbols = Object.getOwnPropertySymbols;
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var propIsEnumerable = Object.prototype.propertyIsEnumerable;
        function toObject(val) {
          if (val === null || val === void 0) {
            throw new TypeError("Object.assign cannot be called with null or undefined");
          }
          return Object(val);
        }
        function shouldUseNative() {
          try {
            if (!Object.assign) {
              return false;
            }
            var test1 = new String("abc");
            test1[5] = "de";
            if (Object.getOwnPropertyNames(test1)[0] === "5") {
              return false;
            }
            var test2 = {};
            for (var i = 0; i < 10; i++) {
              test2["_" + String.fromCharCode(i)] = i;
            }
            var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
              return test2[n];
            });
            if (order2.join("") !== "0123456789") {
              return false;
            }
            var test3 = {};
            "abcdefghijklmnopqrst".split("").forEach(function(letter) {
              test3[letter] = letter;
            });
            if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
              return false;
            }
            return true;
          } catch (err) {
            return false;
          }
        }
        module2.exports = shouldUseNative() ? Object.assign : function(target, source) {
          var from;
          var to = toObject(target);
          var symbols;
          for (var s = 1; s < arguments.length; s++) {
            from = Object(arguments[s]);
            for (var key in from) {
              if (hasOwnProperty.call(from, key)) {
                to[key] = from[key];
              }
            }
            if (getOwnPropertySymbols) {
              symbols = getOwnPropertySymbols(from);
              for (var i = 0; i < symbols.length; i++) {
                if (propIsEnumerable.call(from, symbols[i])) {
                  to[symbols[i]] = from[symbols[i]];
                }
              }
            }
          }
          return to;
        };
      },
      /* 7 */
      /***/
      function(module2, exports2, __webpack_require__) {
        "use strict";
        (function(process) {
          var printWarning = function() {
          };
          if (process.env.NODE_ENV !== "production") {
            var ReactPropTypesSecret = __webpack_require__(1);
            var loggedTypeFailures = {};
            var has = Function.call.bind(Object.prototype.hasOwnProperty);
            printWarning = function(text) {
              var message = "Warning: " + text;
              if (typeof console !== "undefined") {
                console.error(message);
              }
              try {
                throw new Error(message);
              } catch (x) {
              }
            };
          }
          function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
            if (process.env.NODE_ENV !== "production") {
              for (var typeSpecName in typeSpecs) {
                if (has(typeSpecs, typeSpecName)) {
                  var error;
                  try {
                    if (typeof typeSpecs[typeSpecName] !== "function") {
                      var err = Error(
                        (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`."
                      );
                      err.name = "Invariant Violation";
                      throw err;
                    }
                    error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
                  } catch (ex) {
                    error = ex;
                  }
                  if (error && !(error instanceof Error)) {
                    printWarning(
                      (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
                    );
                  }
                  if (error instanceof Error && !(error.message in loggedTypeFailures)) {
                    loggedTypeFailures[error.message] = true;
                    var stack = getStack ? getStack() : "";
                    printWarning(
                      "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
                    );
                  }
                }
              }
            }
          }
          checkPropTypes.resetWarningCache = function() {
            if (process.env.NODE_ENV !== "production") {
              loggedTypeFailures = {};
            }
          };
          module2.exports = checkPropTypes;
        }).call(exports2, __webpack_require__(0));
      },
      /* 8 */
      /***/
      function(module2, exports2, __webpack_require__) {
        "use strict";
        var ReactPropTypesSecret = __webpack_require__(1);
        function emptyFunction() {
        }
        function emptyFunctionWithReset() {
        }
        emptyFunctionWithReset.resetWarningCache = emptyFunction;
        module2.exports = function() {
          function shim(props, propName, componentName, location, propFullName, secret) {
            if (secret === ReactPropTypesSecret) {
              return;
            }
            var err = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
            );
            err.name = "Invariant Violation";
            throw err;
          }
          ;
          shim.isRequired = shim;
          function getShim() {
            return shim;
          }
          ;
          var ReactPropTypes = {
            array: shim,
            bool: shim,
            func: shim,
            number: shim,
            object: shim,
            string: shim,
            symbol: shim,
            any: shim,
            arrayOf: getShim,
            element: shim,
            elementType: shim,
            instanceOf: getShim,
            node: shim,
            objectOf: getShim,
            oneOf: getShim,
            oneOfType: getShim,
            shape: getShim,
            exact: getShim,
            checkPropTypes: emptyFunctionWithReset,
            resetWarningCache: emptyFunction
          };
          ReactPropTypes.PropTypes = ReactPropTypes;
          return ReactPropTypes;
        };
      },
      /* 9 */
      /***/
      function(module2, exports2, __webpack_require__) {
        "use strict";
        (function(process) {
          var ReactIs = __webpack_require__(2);
          var assign = __webpack_require__(6);
          var ReactPropTypesSecret = __webpack_require__(1);
          var checkPropTypes = __webpack_require__(7);
          var has = Function.call.bind(Object.prototype.hasOwnProperty);
          var printWarning = function() {
          };
          if (process.env.NODE_ENV !== "production") {
            printWarning = function(text) {
              var message = "Warning: " + text;
              if (typeof console !== "undefined") {
                console.error(message);
              }
              try {
                throw new Error(message);
              } catch (x) {
              }
            };
          }
          function emptyFunctionThatReturnsNull() {
            return null;
          }
          module2.exports = function(isValidElement, throwOnDirectAccess) {
            var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
            var FAUX_ITERATOR_SYMBOL = "@@iterator";
            function getIteratorFn(maybeIterable) {
              var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
              if (typeof iteratorFn === "function") {
                return iteratorFn;
              }
            }
            var ANONYMOUS = "<<anonymous>>";
            var ReactPropTypes = {
              array: createPrimitiveTypeChecker("array"),
              bool: createPrimitiveTypeChecker("boolean"),
              func: createPrimitiveTypeChecker("function"),
              number: createPrimitiveTypeChecker("number"),
              object: createPrimitiveTypeChecker("object"),
              string: createPrimitiveTypeChecker("string"),
              symbol: createPrimitiveTypeChecker("symbol"),
              any: createAnyTypeChecker(),
              arrayOf: createArrayOfTypeChecker,
              element: createElementTypeChecker(),
              elementType: createElementTypeTypeChecker(),
              instanceOf: createInstanceTypeChecker,
              node: createNodeChecker(),
              objectOf: createObjectOfTypeChecker,
              oneOf: createEnumTypeChecker,
              oneOfType: createUnionTypeChecker,
              shape: createShapeTypeChecker,
              exact: createStrictShapeTypeChecker
            };
            function is(x, y) {
              if (x === y) {
                return x !== 0 || 1 / x === 1 / y;
              } else {
                return x !== x && y !== y;
              }
            }
            function PropTypeError(message) {
              this.message = message;
              this.stack = "";
            }
            PropTypeError.prototype = Error.prototype;
            function createChainableTypeChecker(validate) {
              if (process.env.NODE_ENV !== "production") {
                var manualPropTypeCallCache = {};
                var manualPropTypeWarningCount = 0;
              }
              function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
                componentName = componentName || ANONYMOUS;
                propFullName = propFullName || propName;
                if (secret !== ReactPropTypesSecret) {
                  if (throwOnDirectAccess) {
                    var err = new Error(
                      "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
                    );
                    err.name = "Invariant Violation";
                    throw err;
                  } else if (process.env.NODE_ENV !== "production" && typeof console !== "undefined") {
                    var cacheKey = componentName + ":" + propName;
                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3) {
                      printWarning(
                        "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                      );
                      manualPropTypeCallCache[cacheKey] = true;
                      manualPropTypeWarningCount++;
                    }
                  }
                }
                if (props[propName] == null) {
                  if (isRequired) {
                    if (props[propName] === null) {
                      return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
                    }
                    return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
                  }
                  return null;
                } else {
                  return validate(props, propName, componentName, location, propFullName);
                }
              }
              var chainedCheckType = checkType.bind(null, false);
              chainedCheckType.isRequired = checkType.bind(null, true);
              return chainedCheckType;
            }
            function createPrimitiveTypeChecker(expectedType) {
              function validate(props, propName, componentName, location, propFullName, secret) {
                var propValue = props[propName];
                var propType = getPropType(propValue);
                if (propType !== expectedType) {
                  var preciseType = getPreciseType(propValue);
                  return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."));
                }
                return null;
              }
              return createChainableTypeChecker(validate);
            }
            function createAnyTypeChecker() {
              return createChainableTypeChecker(emptyFunctionThatReturnsNull);
            }
            function createArrayOfTypeChecker(typeChecker) {
              function validate(props, propName, componentName, location, propFullName) {
                if (typeof typeChecker !== "function") {
                  return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
                }
                var propValue = props[propName];
                if (!Array.isArray(propValue)) {
                  var propType = getPropType(propValue);
                  return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
                }
                for (var i = 0; i < propValue.length; i++) {
                  var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
                  if (error instanceof Error) {
                    return error;
                  }
                }
                return null;
              }
              return createChainableTypeChecker(validate);
            }
            function createElementTypeChecker() {
              function validate(props, propName, componentName, location, propFullName) {
                var propValue = props[propName];
                if (!isValidElement(propValue)) {
                  var propType = getPropType(propValue);
                  return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
                }
                return null;
              }
              return createChainableTypeChecker(validate);
            }
            function createElementTypeTypeChecker() {
              function validate(props, propName, componentName, location, propFullName) {
                var propValue = props[propName];
                if (!ReactIs.isValidElementType(propValue)) {
                  var propType = getPropType(propValue);
                  return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
                }
                return null;
              }
              return createChainableTypeChecker(validate);
            }
            function createInstanceTypeChecker(expectedClass) {
              function validate(props, propName, componentName, location, propFullName) {
                if (!(props[propName] instanceof expectedClass)) {
                  var expectedClassName = expectedClass.name || ANONYMOUS;
                  var actualClassName = getClassName(props[propName]);
                  return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
                }
                return null;
              }
              return createChainableTypeChecker(validate);
            }
            function createEnumTypeChecker(expectedValues) {
              if (!Array.isArray(expectedValues)) {
                if (process.env.NODE_ENV !== "production") {
                  if (arguments.length > 1) {
                    printWarning(
                      "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
                    );
                  } else {
                    printWarning("Invalid argument supplied to oneOf, expected an array.");
                  }
                }
                return emptyFunctionThatReturnsNull;
              }
              function validate(props, propName, componentName, location, propFullName) {
                var propValue = props[propName];
                for (var i = 0; i < expectedValues.length; i++) {
                  if (is(propValue, expectedValues[i])) {
                    return null;
                  }
                }
                var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                  var type = getPreciseType(value);
                  if (type === "symbol") {
                    return String(value);
                  }
                  return value;
                });
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
              }
              return createChainableTypeChecker(validate);
            }
            function createObjectOfTypeChecker(typeChecker) {
              function validate(props, propName, componentName, location, propFullName) {
                if (typeof typeChecker !== "function") {
                  return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
                }
                var propValue = props[propName];
                var propType = getPropType(propValue);
                if (propType !== "object") {
                  return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
                }
                for (var key in propValue) {
                  if (has(propValue, key)) {
                    var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                    if (error instanceof Error) {
                      return error;
                    }
                  }
                }
                return null;
              }
              return createChainableTypeChecker(validate);
            }
            function createUnionTypeChecker(arrayOfTypeCheckers) {
              if (!Array.isArray(arrayOfTypeCheckers)) {
                process.env.NODE_ENV !== "production" ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
                return emptyFunctionThatReturnsNull;
              }
              for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
                var checker = arrayOfTypeCheckers[i];
                if (typeof checker !== "function") {
                  printWarning(
                    "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
                  );
                  return emptyFunctionThatReturnsNull;
                }
              }
              function validate(props, propName, componentName, location, propFullName) {
                for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
                  var checker2 = arrayOfTypeCheckers[i2];
                  if (checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
                    return null;
                  }
                }
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`."));
              }
              return createChainableTypeChecker(validate);
            }
            function createNodeChecker() {
              function validate(props, propName, componentName, location, propFullName) {
                if (!isNode(props[propName])) {
                  return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
                }
                return null;
              }
              return createChainableTypeChecker(validate);
            }
            function createShapeTypeChecker(shapeTypes) {
              function validate(props, propName, componentName, location, propFullName) {
                var propValue = props[propName];
                var propType = getPropType(propValue);
                if (propType !== "object") {
                  return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
                }
                for (var key in shapeTypes) {
                  var checker = shapeTypes[key];
                  if (!checker) {
                    continue;
                  }
                  var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                  if (error) {
                    return error;
                  }
                }
                return null;
              }
              return createChainableTypeChecker(validate);
            }
            function createStrictShapeTypeChecker(shapeTypes) {
              function validate(props, propName, componentName, location, propFullName) {
                var propValue = props[propName];
                var propType = getPropType(propValue);
                if (propType !== "object") {
                  return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
                }
                var allKeys = assign({}, props[propName], shapeTypes);
                for (var key in allKeys) {
                  var checker = shapeTypes[key];
                  if (!checker) {
                    return new PropTypeError(
                      "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
                    );
                  }
                  var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                  if (error) {
                    return error;
                  }
                }
                return null;
              }
              return createChainableTypeChecker(validate);
            }
            function isNode(propValue) {
              switch (typeof propValue) {
                case "number":
                case "string":
                case "undefined":
                  return true;
                case "boolean":
                  return !propValue;
                case "object":
                  if (Array.isArray(propValue)) {
                    return propValue.every(isNode);
                  }
                  if (propValue === null || isValidElement(propValue)) {
                    return true;
                  }
                  var iteratorFn = getIteratorFn(propValue);
                  if (iteratorFn) {
                    var iterator = iteratorFn.call(propValue);
                    var step;
                    if (iteratorFn !== propValue.entries) {
                      while (!(step = iterator.next()).done) {
                        if (!isNode(step.value)) {
                          return false;
                        }
                      }
                    } else {
                      while (!(step = iterator.next()).done) {
                        var entry = step.value;
                        if (entry) {
                          if (!isNode(entry[1])) {
                            return false;
                          }
                        }
                      }
                    }
                  } else {
                    return false;
                  }
                  return true;
                default:
                  return false;
              }
            }
            function isSymbol(propType, propValue) {
              if (propType === "symbol") {
                return true;
              }
              if (!propValue) {
                return false;
              }
              if (propValue["@@toStringTag"] === "Symbol") {
                return true;
              }
              if (typeof Symbol === "function" && propValue instanceof Symbol) {
                return true;
              }
              return false;
            }
            function getPropType(propValue) {
              var propType = typeof propValue;
              if (Array.isArray(propValue)) {
                return "array";
              }
              if (propValue instanceof RegExp) {
                return "object";
              }
              if (isSymbol(propType, propValue)) {
                return "symbol";
              }
              return propType;
            }
            function getPreciseType(propValue) {
              if (typeof propValue === "undefined" || propValue === null) {
                return "" + propValue;
              }
              var propType = getPropType(propValue);
              if (propType === "object") {
                if (propValue instanceof Date) {
                  return "date";
                } else if (propValue instanceof RegExp) {
                  return "regexp";
                }
              }
              return propType;
            }
            function getPostfixForTypeWarning(value) {
              var type = getPreciseType(value);
              switch (type) {
                case "array":
                case "object":
                  return "an " + type;
                case "boolean":
                case "date":
                case "regexp":
                  return "a " + type;
                default:
                  return type;
              }
            }
            function getClassName(propValue) {
              if (!propValue.constructor || !propValue.constructor.name) {
                return ANONYMOUS;
              }
              return propValue.constructor.name;
            }
            ReactPropTypes.checkPropTypes = checkPropTypes;
            ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
            ReactPropTypes.PropTypes = ReactPropTypes;
            return ReactPropTypes;
          };
        }).call(exports2, __webpack_require__(0));
      },
      /* 10 */
      /***/
      function(module2, exports2, __webpack_require__) {
        "use strict";
        (function(process) {
          if (process.env.NODE_ENV !== "production") {
            (function() {
              "use strict";
              Object.defineProperty(exports2, "__esModule", { value: true });
              var hasSymbol = typeof Symbol === "function" && Symbol.for;
              var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
              var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
              var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
              var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
              var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
              var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
              var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
              var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
              var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
              var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
              var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
              var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
              var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
              var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
              var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
              var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
              function isValidElementType(type) {
                return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
                type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE);
              }
              var lowPriorityWarning = function() {
              };
              {
                var printWarning = function(format) {
                  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                    args[_key - 1] = arguments[_key];
                  }
                  var argIndex = 0;
                  var message = "Warning: " + format.replace(/%s/g, function() {
                    return args[argIndex++];
                  });
                  if (typeof console !== "undefined") {
                    console.warn(message);
                  }
                  try {
                    throw new Error(message);
                  } catch (x) {
                  }
                };
                lowPriorityWarning = function(condition, format) {
                  if (format === void 0) {
                    throw new Error("`lowPriorityWarning(condition, format, ...args)` requires a warning message argument");
                  }
                  if (!condition) {
                    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
                      args[_key2 - 2] = arguments[_key2];
                    }
                    printWarning.apply(void 0, [format].concat(args));
                  }
                };
              }
              var lowPriorityWarning$1 = lowPriorityWarning;
              function typeOf(object) {
                if (typeof object === "object" && object !== null) {
                  var $$typeof = object.$$typeof;
                  switch ($$typeof) {
                    case REACT_ELEMENT_TYPE:
                      var type = object.type;
                      switch (type) {
                        case REACT_ASYNC_MODE_TYPE:
                        case REACT_CONCURRENT_MODE_TYPE:
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                          return type;
                        default:
                          var $$typeofType = type && type.$$typeof;
                          switch ($$typeofType) {
                            case REACT_CONTEXT_TYPE:
                            case REACT_FORWARD_REF_TYPE:
                            case REACT_PROVIDER_TYPE:
                              return $$typeofType;
                            default:
                              return $$typeof;
                          }
                      }
                    case REACT_LAZY_TYPE:
                    case REACT_MEMO_TYPE:
                    case REACT_PORTAL_TYPE:
                      return $$typeof;
                  }
                }
                return void 0;
              }
              var AsyncMode = REACT_ASYNC_MODE_TYPE;
              var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
              var ContextConsumer = REACT_CONTEXT_TYPE;
              var ContextProvider = REACT_PROVIDER_TYPE;
              var Element = REACT_ELEMENT_TYPE;
              var ForwardRef = REACT_FORWARD_REF_TYPE;
              var Fragment = REACT_FRAGMENT_TYPE;
              var Lazy = REACT_LAZY_TYPE;
              var Memo = REACT_MEMO_TYPE;
              var Portal = REACT_PORTAL_TYPE;
              var Profiler = REACT_PROFILER_TYPE;
              var StrictMode = REACT_STRICT_MODE_TYPE;
              var Suspense = REACT_SUSPENSE_TYPE;
              var hasWarnedAboutDeprecatedIsAsyncMode = false;
              function isAsyncMode(object) {
                {
                  if (!hasWarnedAboutDeprecatedIsAsyncMode) {
                    hasWarnedAboutDeprecatedIsAsyncMode = true;
                    lowPriorityWarning$1(false, "The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
                  }
                }
                return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
              }
              function isConcurrentMode(object) {
                return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
              }
              function isContextConsumer(object) {
                return typeOf(object) === REACT_CONTEXT_TYPE;
              }
              function isContextProvider(object) {
                return typeOf(object) === REACT_PROVIDER_TYPE;
              }
              function isElement(object) {
                return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
              }
              function isForwardRef(object) {
                return typeOf(object) === REACT_FORWARD_REF_TYPE;
              }
              function isFragment(object) {
                return typeOf(object) === REACT_FRAGMENT_TYPE;
              }
              function isLazy(object) {
                return typeOf(object) === REACT_LAZY_TYPE;
              }
              function isMemo(object) {
                return typeOf(object) === REACT_MEMO_TYPE;
              }
              function isPortal(object) {
                return typeOf(object) === REACT_PORTAL_TYPE;
              }
              function isProfiler(object) {
                return typeOf(object) === REACT_PROFILER_TYPE;
              }
              function isStrictMode(object) {
                return typeOf(object) === REACT_STRICT_MODE_TYPE;
              }
              function isSuspense(object) {
                return typeOf(object) === REACT_SUSPENSE_TYPE;
              }
              exports2.typeOf = typeOf;
              exports2.AsyncMode = AsyncMode;
              exports2.ConcurrentMode = ConcurrentMode;
              exports2.ContextConsumer = ContextConsumer;
              exports2.ContextProvider = ContextProvider;
              exports2.Element = Element;
              exports2.ForwardRef = ForwardRef;
              exports2.Fragment = Fragment;
              exports2.Lazy = Lazy;
              exports2.Memo = Memo;
              exports2.Portal = Portal;
              exports2.Profiler = Profiler;
              exports2.StrictMode = StrictMode;
              exports2.Suspense = Suspense;
              exports2.isValidElementType = isValidElementType;
              exports2.isAsyncMode = isAsyncMode;
              exports2.isConcurrentMode = isConcurrentMode;
              exports2.isContextConsumer = isContextConsumer;
              exports2.isContextProvider = isContextProvider;
              exports2.isElement = isElement;
              exports2.isForwardRef = isForwardRef;
              exports2.isFragment = isFragment;
              exports2.isLazy = isLazy;
              exports2.isMemo = isMemo;
              exports2.isPortal = isPortal;
              exports2.isProfiler = isProfiler;
              exports2.isStrictMode = isStrictMode;
              exports2.isSuspense = isSuspense;
            })();
          }
        }).call(exports2, __webpack_require__(0));
      },
      /* 11 */
      /***/
      function(module2, exports2, __webpack_require__) {
        "use strict";
        Object.defineProperty(exports2, "__esModule", { value: true });
        var b = "function" === typeof Symbol && Symbol.for, c = b ? Symbol.for("react.element") : 60103, d = b ? Symbol.for("react.portal") : 60106, e = b ? Symbol.for("react.fragment") : 60107, f = b ? Symbol.for("react.strict_mode") : 60108, g = b ? Symbol.for("react.profiler") : 60114, h = b ? Symbol.for("react.provider") : 60109, k = b ? Symbol.for("react.context") : 60110, l = b ? Symbol.for("react.async_mode") : 60111, m = b ? Symbol.for("react.concurrent_mode") : 60111, n = b ? Symbol.for("react.forward_ref") : 60112, p = b ? Symbol.for("react.suspense") : 60113, q = b ? Symbol.for("react.suspense_list") : 60120, r = b ? Symbol.for("react.memo") : 60115, t = b ? Symbol.for("react.lazy") : 60116, v = b ? Symbol.for("react.fundamental") : 60117, w = b ? Symbol.for("react.responder") : 60118;
        function x(a) {
          if ("object" === typeof a && null !== a) {
            var u = a.$$typeof;
            switch (u) {
              case c:
                switch (a = a.type, a) {
                  case l:
                  case m:
                  case e:
                  case g:
                  case f:
                  case p:
                    return a;
                  default:
                    switch (a = a && a.$$typeof, a) {
                      case k:
                      case n:
                      case h:
                        return a;
                      default:
                        return u;
                    }
                }
              case t:
              case r:
              case d:
                return u;
            }
          }
        }
        function y(a) {
          return x(a) === m;
        }
        exports2.typeOf = x;
        exports2.AsyncMode = l;
        exports2.ConcurrentMode = m;
        exports2.ContextConsumer = k;
        exports2.ContextProvider = h;
        exports2.Element = c;
        exports2.ForwardRef = n;
        exports2.Fragment = e;
        exports2.Lazy = t;
        exports2.Memo = r;
        exports2.Portal = d;
        exports2.Profiler = g;
        exports2.StrictMode = f;
        exports2.Suspense = p;
        exports2.isValidElementType = function(a) {
          return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === v || a.$$typeof === w);
        };
        exports2.isAsyncMode = function(a) {
          return y(a) || x(a) === l;
        };
        exports2.isConcurrentMode = y;
        exports2.isContextConsumer = function(a) {
          return x(a) === k;
        };
        exports2.isContextProvider = function(a) {
          return x(a) === h;
        };
        exports2.isElement = function(a) {
          return "object" === typeof a && null !== a && a.$$typeof === c;
        };
        exports2.isForwardRef = function(a) {
          return x(a) === n;
        };
        exports2.isFragment = function(a) {
          return x(a) === e;
        };
        exports2.isLazy = function(a) {
          return x(a) === t;
        };
        exports2.isMemo = function(a) {
          return x(a) === r;
        };
        exports2.isPortal = function(a) {
          return x(a) === d;
        };
        exports2.isProfiler = function(a) {
          return x(a) === g;
        };
        exports2.isStrictMode = function(a) {
          return x(a) === f;
        };
        exports2.isSuspense = function(a) {
          return x(a) === p;
        };
      }
      /******/
    ]);
  }
});
export default require_build();
/*! Bundled license information:

react-read-more-read-less/build/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)
  (** @license React v16.9.0
  * react-is.development.js
  *
  * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *)
  (** @license React v16.9.0
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=react-read-more-read-less.js.map
